/*
 * Grid columns
 */

// You may use the following mixins as a replacement for .col.col-* classes
@mixin col-core {
  display: flex;
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
}

@mixin col-generator($col-width) {
  flex: 0 1 #{(100% / $columns-quantity) * $col-width};
  max-width: #{(100% / $columns-quantity) * $col-width};
}

// --

.container {
  .col {
    @include col-core;

    @for $i from 1 through $columns-quantity {
      &-#{$i} {
        @include col-generator($i);
      }

      // By default columns get 100% width on smartphone
      @include resolution_smartphone {
        &.col-#{$i} {
          flex: 0 0 100%;
          max-width: 100%;
        }
      }
    }

    // Special classes for responsive layout on different resolutions
    // xl - widescreen
    // l - desktop
    // m - phablet and tablet
    // s - phone
    &[class="col-xl-"],
    &[class="col-l-"],
    &[class="col-m-"],
    &[class="col-s-"] {
      max-width: none;
    }

    @include resolution_widescreen {
      @for $i from 1 through $columns-quantity {
        &.col-xl-#{$i} {
          @include col-generator($i);
        }
      }
    }

    @include resolution_desktop {
      @for $i from 1 through $columns-quantity {
        &.col-l-#{$i} {
          @include col-generator($i);
        }
      }
    }

    @include resolution_phablet-and-tablet {
      @for $i from 1 through $columns-quantity {
        &.col-m-#{$i} {
          @include col-generator($i);
        }
      }
    }

    @include resolution_phone {
      @for $i from 1 through $columns-quantity {
        &.col-s-#{$i} {
          @include col-generator($i);
        }
      }
    }
  }
}

